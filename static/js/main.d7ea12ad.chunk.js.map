{"version":3,"sources":["pictures/background.jpeg","BooksAPI.js","Book.js","BookShelf.js","Header.js","SingleSearchTerm.js","SearchTerms.js","Search.js","BookDetails.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","this","props","onMoveBook","_this","_this$props","key","toggleBookDetails","setCurrentBook","react_default","a","createElement","className","src","imageLinks","thumbnail","title","authors","join","value","onChange","e","updateBook","target","disabled","selected","onClick","Component","BookShelf","booksOnShelf","shelfNames","map","index","filter","src_Book","Header","background","alt","class","react_router_dom","to","SingleSearchTerm","searchTerm","setQuery","setActiveTerm","termStyle","style","allSearchTerms","styleActive","color","backgroundColor","styleInactive","SearchTerms","state","showSearchTerms","searchTerms","activeTerm","toggleButtonText","toggleButtonStyle","toggleSearchTerms","console","log","setState","term","_this2","_this$state","src_SingleSearchTerm","Search","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","searchResult","updateQuery","trim","BooksAPI","error","_this3","allBooks","type","placeholder","event","src_SearchTerms","BookDetails","handleClick","currentBook","subtitle","publisher","publishedDate","description","BooksApp","showBookDetails","moveBook","b","basename","process","react_router","exact","path","render","src_Search","src_BookDetails","src_Header","src_BookShelf","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d7ea12ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.f89ff9d7.jpeg\";","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n    token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n    'Accept': 'application/json',\n    'Authorization': token\n}\n\nexport const get = (bookId) =>\n    fetch(`${api}/books/${bookId}`, { headers })\n        .then(res => res.json())\n        .then(data => data.book)\n\nexport const getAll = () =>\n    fetch(`${api}/books`, { headers })\n        .then(res => res.json())\n        .then(data => data.books)\n\nexport const update = (book, shelf) =>\n    fetch(`${api}/books/${book.id}`, {\n        method: 'PUT',\n        headers: {\n            ...headers,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ shelf })\n    }).then(res => res.json())\n\nexport const search = (query) =>\n    fetch(`${api}/search`, {\n        method: 'POST',\n        headers: {\n            ...headers,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ query })\n    }).then(res => res.json())\n        .then(data => data.books)\n","import React, { Component } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Book extends Component {\r\n    static propTypes = {\r\n        book: PropTypes.object.isRequired,\r\n        onMoveBook: PropTypes.func.isRequired\r\n    }\r\n\r\n    updateBook(shelf) {\r\n        this.props.onMoveBook(this.props.book, shelf)\r\n    }\r\n\r\n    render() {\r\n        const { key, book, onMoveBook, toggleBookDetails,setCurrentBook } = this.props;\r\n        return (\r\n            <li key={key}>\r\n                <div className=\"book card\">\r\n                    <div className=\"book-top\">\r\n                        <img className=\"book-cover\" src={book.imageLinks && book.imageLinks.thumbnail} />\r\n                    </div>\r\n                    <div className=\"book-title\">{book.title}</div>\r\n                    <div className=\"book-authors\">{book.authors && book.authors.join(', ')}</div>\r\n                    <div className=\"book-shelf-changer\">\r\n                        <p>Move to...</p>\r\n                        <select value={book.shelf} onChange={(e) => this.updateBook(e.target.value)}>\r\n                            <option disabled selected value> - select an option - </option>\r\n                            <option value=\"currentlyReading\">Currently Reading</option>\r\n                            <option value=\"wantToRead\">Want to Read</option>\r\n                            <option value=\"read\">Read</option>\r\n                            <option value=\"none\">Remove from shelf</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"book-shelf-changer book-details\" onClick={()=>{toggleBookDetails(); setCurrentBook(book);}}>\r\n                        <p>Details</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Book;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route } from 'react-router-dom';\r\nimport Book from './Book';\r\n\r\nclass BookShelf extends Component {\r\n    static propTypes = {\r\n        booksOnShelf: PropTypes.array.isRequired,\r\n        onMoveBook: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { booksOnShelf, onMoveBook,toggleBookDetails,setCurrentBook } = this.props;\r\n\r\n        const shelfValues = [\"currentlyReading\", \"wantToRead\", \"read\"];\r\n        const shelfNames = [\"I'm currently reading...\", \"I want to read...\", \"I have read...\"];\r\n\r\n        return (\r\n            <div>\r\n                {shelfValues.map((shelf, index) => {\r\n                    return (\r\n                        <div key={index} className=\"list-books-content\">\r\n                            <div className=\"bookshelf\">\r\n                                <h2 className=\"bookshelf-title\">{shelfNames[index]}</h2>\r\n                                <div className=\"bookshelf-books\">\r\n                                    <ol className=\"books-grid\">\r\n                                        {booksOnShelf.filter( book => book.shelf === shelf)\r\n                                        .map( book => (\r\n                                            <Book\r\n                                                key = {book.id}\r\n                                                book = {book}\r\n                                                onMoveBook = {onMoveBook}\r\n                                                toggleBookDetails = {toggleBookDetails}\r\n                                                setCurrentBook={setCurrentBook}\r\n                                            />\r\n                                        ))}\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BookShelf;\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport background from './pictures/background.jpeg';\r\n\r\nclass Header extends Component{\r\n    static propTypes = {\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"header-container\">\r\n                <img src = {background} alt = \"picture of books\" class = \"header-image\"/>\r\n                <h1 className = \"header-title\">MyReads</h1>\r\n                <p className = \"header-quote\">“That’s the thing about books. They let you travel without moving your feet.”<br/>\r\n                <i>– Jhumpa Lahiri</i></p>\r\n                \r\n                <Link to=\"/search\" className = \"header-button\">EXPLORE BOOKS</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SingleSearchTerm extends Component{\r\n    render(){\r\n        const { searchTerm, setQuery, setActiveTerm, termStyle } = this.props;\r\n\r\n        return(\r\n            <ol className = \"search-term\" style = {termStyle} \r\n                onClick= {() => {setQuery(searchTerm); setActiveTerm(searchTerm) }}>\r\n                {searchTerm}\r\n            </ol>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default SingleSearchTerm;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SingleSearchTerm from './SingleSearchTerm';\r\n\r\nconst allSearchTerms = [\r\n    'Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', \r\n    'Baseball', 'Basketball', 'Bhagat', 'Biography', 'Brief', 'Business', \r\n    'Camus', 'Cervantes', 'Christie', 'Classics', 'Comics', 'Cook', 'Cricket', 'Cycling', \r\n    'Desai', 'Design', 'Development', 'Digital Marketing', 'Drama', 'Drawing', 'Dumas', \r\n    'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 'Football', 'Future', \r\n    'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', \r\n    'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', \r\n    'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', \r\n    'React', 'Redux', 'River', 'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming',\r\n     'Tale', 'Thrun', 'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS'\r\n]\r\n\r\nconst styleActive = {color: \"white\", backgroundColor: \"#ca9b34\"};\r\nconst styleInactive = {backgroundColor: \"white\", color: \"#ca9b34\"};\r\n\r\nclass SearchTerms extends Component{\r\n    state = {\r\n        showSearchTerms: -1,\r\n        searchTerms:[],\r\n        activeTerm: null,\r\n        toggleButtonText: \"Show suggested search terms\",\r\n        toggleButtonStyle: {color: \"white\", backgroundColor: \"#ca9b34\"}\r\n    }\r\n\r\n    toggleSearchTerms = () =>{\r\n        this.state.showSearchTerms *= (-1);\r\n        console.log(this.state.showSearchTerms);\r\n        this.state.showSearchTerms == 1? \r\n            this.setState({\r\n                searchTerms:allSearchTerms,\r\n                toggleButtonText: \"Hide suggested search terms\", \r\n                toggleButtonStyle: {color: \"#ca9b34\", backgroundColor: \"#f5f3f3\"}\r\n            })\r\n            :this.setState({\r\n                searchTerms:[],\r\n                toggleButtonText: \"Show suggested search terms\", \r\n                toggleButtonStyle: {color: \"white\", backgroundColor: \"#ca9b34\"}\r\n            });\r\n    }\r\n\r\n    setActiveTerm = (term) => {\r\n        this.setState({\r\n            activeTerm: term\r\n        })\r\n    }\r\n        \r\n    \r\n    render(){\r\n        const{ searchTerms, activeTerm, toggleButtonText, toggleButtonStyle} = this.state;\r\n        const{ setQuery } = this.props; \r\n\r\n        return (\r\n            <div className = \"search-terms-collection\">\r\n                <button className= \"search-terms-toggle\" onClick= {this.toggleSearchTerms} style={toggleButtonStyle}>\r\n                    {toggleButtonText}\r\n                </button>\r\n\r\n                <li className = \"search-terms-list\">\r\n                    {searchTerms.map(term=>{\r\n                        return(\r\n                            activeTerm === term?\r\n                            <SingleSearchTerm searchTerm = {term} setQuery = {setQuery} setActiveTerm = {this.setActiveTerm} termStyle = {styleActive}/>\r\n                            :<SingleSearchTerm searchTerm = {term} setQuery = {setQuery} setActiveTerm = {this.setActiveTerm} termStyle = {styleInactive}/>\r\n                        )\r\n                    })}\r\n                </li>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default SearchTerms;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport background from './pictures/background.jpeg';\r\nimport Book from './Book';\r\nimport SearchTerms from './SearchTerms';\r\nimport * as BooksAPI from './BooksAPI';\r\n\r\nclass Search extends Component { \r\n    constructor(props){\r\n        super(props);\r\n        // this.setQuery = this.setQuery.bind(this);\r\n    }\r\n\r\n    state = {\r\n        query: '',\r\n        searchResult:[]\r\n      }\r\n\r\n    updateQuery = (query) => {\r\n        this.setState(() => ({\r\n          query: query.trim()\r\n        }))\r\n    }\r\n\r\n    search = (query) =>{\r\n        if(query!=''){\r\n            BooksAPI.search(query).then(books=>{\r\n                if(books.error){\r\n                    this.setState({ searchResult: [] })\r\n                }else{\r\n                this.setState({ searchResult: books })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    setQuery = (searchTerm)=>{\r\n        this.setState({\r\n            query: searchTerm\r\n        });\r\n        this.search(searchTerm);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        BooksAPI.getAll().then((books) => {\r\n            this.setState({searchResult: books })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { allBooks, onMoveBook } = this.props;\r\n        const { query, searchResult } = this.state;\r\n\r\n\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link to=\"/\" className=\"close-search\">Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input type=\"text\" \r\n                            placeholder=\"Search by title or author\" \r\n                            value={this.state.query}\r\n                            onChange={(event) => {\r\n                                this.updateQuery(event.target.value);\r\n                                this.search(query);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <SearchTerms setQuery = {this.setQuery}/>\r\n                \r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {searchResult.map(book => (\r\n                            <Book\r\n                                key={book.id}\r\n                                book={book}\r\n                                onMoveBook = {onMoveBook}\r\n                            />\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from \"react\";\r\nimport Book from './Book';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BookDetails extends Component {\r\n  handleClick = () => {\r\n    this.props.toggleBookDetails();\r\n  };\r\n\r\n  render() {\r\n      const { currentBook } = this.props;\r\n    return (\r\n      <div className=\"book-detail-window\">\r\n        <div className=\"book-detail-popup\">\r\n            <span className=\"close\" onClick={this.handleClick}>&times;</span>\r\n            <img className=\"book-detail-cover\" src={currentBook.imageLinks && currentBook.imageLinks.thumbnail} />\r\n            <div className=\"book-detail-content\">\r\n                <h2>{currentBook.title}</h2>\r\n                <h4>{currentBook.subtitle}</h4>\r\n                <h5>{currentBook.authors && currentBook.authors.join(', ')}</h5>\r\n                <div><b>Publisher:</b> {currentBook.publisher}&nbsp;&nbsp;<b>Date: </b>{currentBook.publishedDate}</div><br/>\r\n                <p>{currentBook.description}</p>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BookDetails;\r\n","import React, { Component } from 'react';\r\nimport {HashRouter, Route, Link } from 'react-router-dom';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport BookShelf from './BookShelf';\r\nimport Header from './Header';\r\nimport Search from './Search';\r\nimport BookDetails from './BookDetails';\r\nimport './App.css'\r\n\r\nclass BooksApp extends Component {\r\n    state = {\r\n        books: [],\r\n        searchResult : [],\r\n        showBookDetails : false,\r\n        currentBook: null\r\n    }\r\n\r\n    moveBook = (book, shelf) => {\r\n        if (this.state.books) {\r\n            BooksAPI.update(book, shelf).then(() => {\r\n                book.shelf = shelf;\r\n                this.setState(state => ({\r\n                    books: state.books.filter(b => b.id !== book.id).concat([book])\r\n                }))\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleBookDetails = () => {\r\n        this.setState({\r\n          showBookDetails: !this.state.showBookDetails\r\n        })\r\n        console.log(this.state.showBookDetails);\r\n    }\r\n\r\n    setCurrentBook = (book) =>{\r\n        this.setState({\r\n            currentBook: book\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        BooksAPI.getAll().then((books) => {\r\n            this.setState({ books: books, searchResult: books, showBookDetails : false })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { books, searchResult, showBookDetails, currentBook } = this.state;\r\n\r\n        return (\r\n            <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <div className=\"app\">\r\n                <Route exact path='/search' render={() => (\r\n                    <Search \r\n                        allBooks = {searchResult}\r\n                        onMoveBook = {this.moveBook}/>\r\n                )} />\r\n                <Route exact path='/' render={() => (\r\n                    <div >\r\n                        {showBookDetails ? <BookDetails toggleBookDetails={this.toggleBookDetails} currentBook = {currentBook}/> : null}\r\n                        <Header/>\r\n                        <div>\r\n                            <BookShelf\r\n                                booksOnShelf={books}\r\n                                onMoveBook={this.moveBook}\r\n                                toggleBookDetails={this.toggleBookDetails}\r\n                                setCurrentBook={this.setCurrentBook}\r\n                            />\r\n                        </div>\r\n                        <Link to=\"/search\" className=\"open-search\">ADD BOOKS</Link>\r\n                    </div>\r\n                )} />\r\n            </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}