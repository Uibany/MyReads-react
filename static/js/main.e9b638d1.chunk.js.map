{"version":3,"sources":["pictures/background.jpeg","BooksAPI.js","Book.js","BookShelf.js","Header.js","SingleSearchTerm.js","SearchTerms.js","BookDetails.js","Search.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","this","props","onMoveBook","_this","_this$props","key","toggleBookDetails","setCurrentBook","react_default","a","createElement","className","src","imageLinks","thumbnail","alt","title","authors","join","value","onChange","e","updateBook","target","disabled","selected","onClick","Component","BookShelf","booksOnShelf","shelfNames","map","index","filter","src_Book","Header","background","react_router_dom","to","SingleSearchTerm","searchTerm","setQuery","setActiveTerm","termStyle","style","allSearchTerms","styleActive","color","backgroundColor","styleInactive","SearchTerms","state","showSearchTerms","searchTerms","activeTerm","toggleButtonText","toggleButtonStyle","toggleSearchTerms","setState","console","log","term","_this2","_this$state","src_SingleSearchTerm","BookDetails","handleClick","currentBook","subtitle","publisher","publishedDate","description","href","previewLink","Search","searchResult","showBookDetails","updateQuery","trim","BooksAPI","error","_this3","src_BookDetails","type","placeholder","event","src_SearchTerms","BooksApp","moveBook","b","basename","process","react_router","exact","path","render","src_Search","allBooks","src_Header","src_BookShelf","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e9b638d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.f89ff9d7.jpeg\";","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n    token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n    'Accept': 'application/json',\n    'Authorization': token\n}\n\nexport const get = (bookId) =>\n    fetch(`${api}/books/${bookId}`, { headers })\n        .then(res => res.json())\n        .then(data => data.book)\n\nexport const getAll = () =>\n    fetch(`${api}/books`, { headers })\n        .then(res => res.json())\n        .then(data => data.books)\n\nexport const update = (book, shelf) =>\n    fetch(`${api}/books/${book.id}`, {\n        method: 'PUT',\n        headers: {\n            ...headers,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ shelf })\n    }).then(res => res.json())\n\nexport const search = (query) =>\n    fetch(`${api}/search`, {\n        method: 'POST',\n        headers: {\n            ...headers,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ query })\n    }).then(res => res.json())\n        .then(data => data.books)\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Book extends Component {\r\n    static propTypes = {\r\n        book: PropTypes.object.isRequired,\r\n        onMoveBook: PropTypes.func.isRequired,\r\n        toggleBookDetails: PropTypes.func.isRequired,\r\n        setCurrentBook: PropTypes.func.isRequired\r\n    }\r\n\r\n    updateBook(shelf) {\r\n        this.props.onMoveBook(this.props.book, shelf)\r\n    }\r\n\r\n    render() {\r\n        const { key, book, toggleBookDetails, setCurrentBook } = this.props;\r\n        return (\r\n            <li key={key}>\r\n                <div className=\"book card\">\r\n                    <div className=\"book-top\">\r\n                        <img className=\"book-cover\" src={book.imageLinks && book.imageLinks.thumbnail} alt=\"book cover\" />\r\n                    </div>\r\n                    <div className=\"book-title\">{book.title}</div>\r\n                    <div className=\"book-authors\">{book.authors && book.authors.join(', ')}</div>\r\n                    <div className=\"book-shelf-changer\">\r\n                        <p>Move to...</p>\r\n                        <select value={book.shelf} onChange={(e) => this.updateBook(e.target.value)}>\r\n                            <option disabled selected value> - select an option - </option>\r\n                            <option value=\"currentlyReading\">Currently Reading</option>\r\n                            <option value=\"wantToRead\">Want to Read</option>\r\n                            <option value=\"read\">Read</option>\r\n                            <option value=\"none\">Remove from shelf</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"book-shelf-changer book-details\" onClick={()=>{toggleBookDetails(); setCurrentBook(book);}}>\r\n                        <p>Details</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Book;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Book from './Book';\r\n\r\nclass BookShelf extends Component {\r\n    static propTypes = {\r\n        book: PropTypes.object.isRequired,\r\n        onMoveBook: PropTypes.func.isRequired,\r\n        toggleBookDetails: PropTypes.func.isRequired,\r\n        setCurrentBook: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { booksOnShelf, onMoveBook, toggleBookDetails, setCurrentBook } = this.props;\r\n\r\n        const shelfValues = [\"currentlyReading\", \"wantToRead\", \"read\"];\r\n        const shelfNames = [\"I'm currently reading...\", \"I want to read...\", \"I have read...\"];\r\n\r\n        return (\r\n            <div>\r\n                {shelfValues.map((shelf, index) => {\r\n                    return (\r\n                        <div key={index} className=\"list-books-content\">\r\n                            <div className=\"bookshelf\">\r\n                                <h2 className=\"bookshelf-title\">{shelfNames[index]}</h2>\r\n                                <div className=\"bookshelf-books\">\r\n                                    <ol className=\"books-grid\">\r\n                                        {booksOnShelf.filter( book => book.shelf === shelf)\r\n                                        .map( book => (\r\n                                            <Book\r\n                                                key = {book.id}\r\n                                                book = {book}\r\n                                                onMoveBook = {onMoveBook}\r\n                                                toggleBookDetails = {toggleBookDetails}\r\n                                                setCurrentBook = {setCurrentBook}\r\n                                            />\r\n                                        ))}\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookShelf;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport background from './pictures/background.jpeg';\r\n\r\nclass Header extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"header-container\">\r\n                <img src = {background} alt = \"background\" className = \"header-image\"/>\r\n                <h1 className = \"header-title\">MyReads</h1>\r\n                <p className = \"header-quote\">“That’s the thing about books. They let you travel without moving your feet.”<br/>\r\n                <i>– Jhumpa Lahiri</i></p>\r\n                \r\n                <Link to=\"/search\" className = \"header-button\">EXPLORE BOOKS</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SingleSearchTerm extends Component{\r\n    static propTypes = {\r\n        searchTerm: PropTypes.string.isRequired,\r\n        termStyle: PropTypes.object.isRequired,\r\n        setQuery: PropTypes.func.isRequired,\r\n        setActiveTerm: PropTypes.func.isRequired\r\n    } \r\n\r\n\r\n    render(){\r\n        const { searchTerm, setQuery, setActiveTerm, termStyle } = this.props;\r\n\r\n        return(\r\n            <ol className = \"search-term\" style = {termStyle} \r\n                onClick= {() => {setQuery(searchTerm); setActiveTerm(searchTerm) }}>\r\n                {searchTerm}\r\n            </ol>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default SingleSearchTerm;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SingleSearchTerm from './SingleSearchTerm';\r\n\r\nconst allSearchTerms = [\r\n    'Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', \r\n    'Baseball', 'Basketball', 'Bhagat', 'Biography', 'Brief', 'Business', \r\n    'Camus', 'Cervantes', 'Christie', 'Classics', 'Comics', 'Cook', 'Cricket', 'Cycling', \r\n    'Desai', 'Design', 'Development', 'Digital Marketing', 'Drama', 'Drawing', 'Dumas', \r\n    'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 'Football', 'Future', \r\n    'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', \r\n    'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', \r\n    'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', \r\n    'React', 'Redux', 'River', 'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming',\r\n     'Tale', 'Thrun', 'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS'\r\n]\r\n\r\nconst styleActive = {color: \"white\", backgroundColor: \"#ca9b34\"};\r\nconst styleInactive = {backgroundColor: \"white\", color: \"#ca9b34\"};\r\n\r\nclass SearchTerms extends Component{\r\n    static propTypes = {\r\n        setQuery: PropTypes.func.isRequired\r\n    } \r\n\r\n    state = {\r\n        showSearchTerms: false,\r\n        searchTerms:[],\r\n        activeTerm: null,\r\n        toggleButtonText: \"Show suggested search terms\",\r\n        toggleButtonStyle: {color: \"white\", backgroundColor: \"#ca9b34\"}\r\n    }\r\n\r\n    toggleSearchTerms = () =>{\r\n        this.setState({\r\n            showSearchTerms: !this.state.showSearchTerms\r\n        })\r\n        console.log(this.state.showSearchTerms);\r\n        this.state.showSearchTerms === false? \r\n            this.setState({\r\n                searchTerms:allSearchTerms,\r\n                toggleButtonText: \"Hide suggested search terms\", \r\n                toggleButtonStyle: {color: \"#ca9b34\", backgroundColor: \"#f5f3f3\"}\r\n            })\r\n            :this.setState({\r\n                searchTerms:[],\r\n                toggleButtonText: \"Show suggested search terms\", \r\n                toggleButtonStyle: {color: \"white\", backgroundColor: \"#ca9b34\"}\r\n            });\r\n    }\r\n\r\n    setActiveTerm = (term) => {\r\n        this.setState({\r\n            activeTerm: term\r\n        })\r\n    }\r\n        \r\n    \r\n    render(){\r\n        const{ searchTerms, activeTerm, toggleButtonText, toggleButtonStyle} = this.state;\r\n        const{ setQuery } = this.props; \r\n\r\n        return (\r\n            <div className = \"search-terms-collection\">\r\n                <button className= \"search-terms-toggle\" onClick= {this.toggleSearchTerms} style={toggleButtonStyle}>\r\n                    {toggleButtonText}\r\n                </button>\r\n\r\n                <li className = \"search-terms-list\">\r\n                    {searchTerms.map(term=>{\r\n                        return(\r\n                            activeTerm === term?\r\n                            <SingleSearchTerm searchTerm = {term} setQuery = {setQuery} setActiveTerm = {this.setActiveTerm} termStyle = {styleActive}/>\r\n                            :<SingleSearchTerm searchTerm = {term} setQuery = {setQuery} setActiveTerm = {this.setActiveTerm} termStyle = {styleInactive}/>\r\n                        )\r\n                    })}\r\n                </li>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default SearchTerms;","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BookDetails extends Component {\r\n    static propTypes = {\r\n        currentBook: PropTypes.object.isRequired,\r\n        toggleBookDetails: PropTypes.func.isRequired\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.toggleBookDetails();\r\n    };\r\n\r\n  render() {\r\n    const { currentBook } = this.props;\r\n\r\n    return (\r\n      <div className=\"book-detail-window\">\r\n        <div className=\"book-detail-popup\">\r\n            <span className=\"close\" onClick={this.handleClick}>&times;</span>\r\n            <img className=\"book-detail-cover\" src={currentBook.imageLinks && currentBook.imageLinks.thumbnail} alt = \"book cover\" />\r\n            <div className=\"book-detail-content\">\r\n                <h2>{currentBook.title}</h2>\r\n                <h4>{currentBook.subtitle}</h4>\r\n                <h5>{currentBook.authors && currentBook.authors.join(', ')}</h5>\r\n                <div><b>Publisher:</b> {currentBook.publisher}&nbsp;&nbsp;<b>Date: </b>{currentBook.publishedDate}</div><br/>\r\n                <p>{currentBook.description}</p>\r\n                <a href={currentBook.previewLink}  className=\"book-detail-link\">View eBook</a>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BookDetails;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Book from './Book';\r\nimport SearchTerms from './SearchTerms';\r\nimport BookDetails from './BookDetails';\r\nimport * as BooksAPI from './BooksAPI';\r\n\r\nclass Search extends Component {\r\n    static propTypes = {\r\n        onMoveBook: PropTypes.func.isRequired\r\n    } \r\n\r\n    state = {\r\n        query: '',\r\n        searchResult:[],\r\n        showBookDetails : false,\r\n        currentBook: null\r\n      }\r\n\r\n    updateQuery = (query) => {\r\n        this.setState(() => ({\r\n          query: query.trim()\r\n        }))\r\n    }\r\n\r\n    search = (query) =>{\r\n        if(query!==''){\r\n            BooksAPI.search(query).then(books=>{\r\n                if(books.error){\r\n                    this.setState({ searchResult: [] })\r\n                }else{\r\n                this.setState({ searchResult: books })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    setQuery = (searchTerm)=>{\r\n        this.setState({\r\n            query: searchTerm\r\n        });\r\n        this.search(searchTerm);\r\n    }\r\n\r\n    toggleBookDetails = () => {\r\n        this.setState({\r\n          showBookDetails: !this.state.showBookDetails\r\n        })\r\n\r\n    }\r\n\r\n    setCurrentBook = (book) =>{\r\n        this.setState({\r\n            currentBook: book\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        BooksAPI.getAll().then((books) => {\r\n            this.setState({searchResult: books })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { onMoveBook } = this.props;\r\n        const { query, searchResult, showBookDetails, currentBook } = this.state;\r\n\r\n        return (\r\n            <div className=\"search-books\">\r\n                {showBookDetails ? <BookDetails toggleBookDetails={this.toggleBookDetails} currentBook = {currentBook}/> : null}\r\n                <div className=\"search-books-bar\">\r\n                    <Link to=\"/\" className=\"close-search\">Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input type=\"text\" \r\n                            placeholder=\"Search by title or author\" \r\n                            value={this.state.query}\r\n                            onChange={(event) => {\r\n                                this.updateQuery(event.target.value);\r\n                                this.search(query);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <SearchTerms setQuery = {this.setQuery}/>\r\n                \r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {searchResult.map(book => (\r\n                            <Book\r\n                                key={book.id}\r\n                                book={book}\r\n                                onMoveBook = {onMoveBook}\r\n                                toggleBookDetails={this.toggleBookDetails}\r\n                                setCurrentBook={this.setCurrentBook}\r\n                            />\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport {HashRouter, Route, Link } from 'react-router-dom';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport BookShelf from './BookShelf';\r\nimport Header from './Header';\r\nimport Search from './Search';\r\nimport BookDetails from './BookDetails';\r\nimport './App.css'\r\n\r\nclass BooksApp extends Component {\r\n    state = {\r\n        books: [],\r\n        searchResult : [],\r\n        showBookDetails : false,\r\n        currentBook: null\r\n    }\r\n\r\n    moveBook = (book, shelf) => {\r\n        if (this.state.books) {\r\n            BooksAPI.update(book, shelf).then(() => {\r\n                book.shelf = shelf;\r\n                this.setState(state => ({\r\n                    books: state.books.filter(b => b.id !== book.id).concat([book])\r\n                }))\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleBookDetails = () => {\r\n        this.setState({\r\n          showBookDetails: !this.state.showBookDetails\r\n        })\r\n        console.log(this.state.showBookDetails);\r\n    }\r\n\r\n    setCurrentBook = (book) =>{\r\n        this.setState({\r\n            currentBook: book\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        BooksAPI.getAll().then((books) => {\r\n            this.setState({ books: books, searchResult: books, showBookDetails : false })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { books, searchResult, showBookDetails, currentBook } = this.state;\r\n\r\n        return (\r\n            <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <div className=\"app\">\r\n                <Route exact path='/search' render={() => (\r\n                    <Search \r\n                        allBooks = {searchResult}\r\n                        onMoveBook = {this.moveBook}/>\r\n                )} />\r\n                <Route exact path='/' render={() => (\r\n                    <div >\r\n                        {showBookDetails ? <BookDetails toggleBookDetails={this.toggleBookDetails} currentBook = {currentBook}/> : null}\r\n                        <Header/>\r\n                        <div>\r\n                            <BookShelf\r\n                                booksOnShelf={books}\r\n                                onMoveBook={this.moveBook}\r\n                                toggleBookDetails={this.toggleBookDetails}\r\n                                setCurrentBook={this.setCurrentBook}\r\n                            />\r\n                        </div>\r\n                        <Link to=\"/search\" className=\"open-search\">ADD BOOKS</Link>\r\n                    </div>\r\n                )} />\r\n            </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}