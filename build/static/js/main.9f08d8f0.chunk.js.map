{"version":3,"sources":["pictures/background.jpeg","BooksAPI.js","Book.js","BookShelf.js","Header.js","SearchTerms.js","Search.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","this","props","onMoveBook","_this","_this$props","key","react_default","a","createElement","className","src","imageLinks","thumbnail","title","authors","join","value","onChange","e","updateBook","target","disabled","selected","Component","BookShelf","booksOnShelf","shelfNames","map","index","filter","src_Book","Header","background","alt","class","react_router_dom","to","allSearchTerms","SearchTerms","state","showSearchTerms","searchTerms","activeTermIndex","toggleButtonText","toggleButtonStyle","color","backgroundColor","toggleSearchTerms","console","log","setState","_this$state","onClick","style","term","Search","searchResult","updateQuery","trim","BooksAPI","error","_this2","_this3","allBooks","type","placeholder","event","src_SearchTerms","BooksApp","moveBook","b","basename","process","react_router","exact","path","render","src_Search","src_Header","src_BookShelf","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9f08d8f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.f89ff9d7.jpeg\";","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n    token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n    'Accept': 'application/json',\n    'Authorization': token\n}\n\nexport const get = (bookId) =>\n    fetch(`${api}/books/${bookId}`, { headers })\n        .then(res => res.json())\n        .then(data => data.book)\n\nexport const getAll = () =>\n    fetch(`${api}/books`, { headers })\n        .then(res => res.json())\n        .then(data => data.books)\n\nexport const update = (book, shelf) =>\n    fetch(`${api}/books/${book.id}`, {\n        method: 'PUT',\n        headers: {\n            ...headers,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ shelf })\n    }).then(res => res.json())\n\nexport const search = (query) =>\n    fetch(`${api}/search`, {\n        method: 'POST',\n        headers: {\n            ...headers,\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ query })\n    }).then(res => res.json())\n        .then(data => data.books)\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Book extends Component {\r\n    static propTypes = {\r\n        book: PropTypes.object.isRequired,\r\n        onMoveBook: PropTypes.func.isRequired\r\n      }\r\n\r\n    updateBook(shelf) {\r\n        this.props.onMoveBook(this.props.book, shelf)\r\n    }\r\n    \r\n    \r\n    render() {\r\n        const { key, book, onMoveBook } = this.props;\r\n        return (\r\n            <li key = {key}>\r\n                <div className=\"book card\">\r\n                    <div className=\"book-top\"> \r\n                        <img className=\"book-cover\" src = {book.imageLinks && book.imageLinks.thumbnail}/>    \r\n                    </div>\r\n                    <div className=\"book-title\">{book.title}</div>\r\n                    <div className=\"book-authors\">{book.authors && book.authors.join(', ')}</div>\r\n                    <div className=\"book-shelf-changer\">\r\n                        <p>Move to...</p>\r\n                        <select value={book.shelf} onChange={(e) => this.updateBook(e.target.value)}>\r\n                            <option disabled selected value> - select an option - </option>\r\n                            <option value=\"currentlyReading\">Currently Reading</option>\r\n                            <option value=\"wantToRead\">Want to Read</option>\r\n                            <option value=\"read\">Read</option>\r\n                            <option value=\"none\">Remove from shelf</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                \r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Book;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route } from 'react-router-dom';\r\nimport Book from './Book';\r\n\r\nclass BookShelf extends Component {\r\n    static propTypes = {\r\n        booksOnShelf: PropTypes.array.isRequired,\r\n        onMoveBook: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { booksOnShelf, onMoveBook } = this.props;\r\n\r\n        const shelfValues = [\"currentlyReading\", \"wantToRead\", \"read\"];\r\n        const shelfNames = [\"I'm currently reading...\", \"I want to read...\", \"I have read...\"];\r\n\r\n        return (\r\n            <div>\r\n                {shelfValues.map((shelf, index) => {\r\n                    return (\r\n                        <div key={index} className=\"list-books-content\">\r\n                            <div className=\"bookshelf\">\r\n                                <h2 className=\"bookshelf-title\">{shelfNames[index]}</h2>\r\n                                <div className=\"bookshelf-books\">\r\n                                    <ol className=\"books-grid\">\r\n                                        {booksOnShelf.filter( book => book.shelf === shelf)\r\n                                        .map( book => (\r\n                                            <Book\r\n                                                key = {book.id}\r\n                                                book = {book}\r\n                                                onMoveBook = {onMoveBook}\r\n                                            />\r\n                                        ))}\r\n                                    </ol>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default BookShelf;\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport background from './pictures/background.jpeg';\r\n\r\nclass Header extends Component{\r\n    static propTypes = {\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"header-container\">\r\n                <img src = {background} alt = \"picture of books\" class = \"header-image\"/>\r\n                <h1 className = \"header-title\">MyReads</h1>\r\n                <p className = \"header-quote\">“That’s the thing about books. They let you travel without moving your feet.”<br/>\r\n                <i>– Jhumpa Lahiri</i></p>\r\n                \r\n                <Link to=\"/search\" className = \"header-button\">EXPLORE BOOKS</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst allSearchTerms = [\r\n    'Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', \r\n    'Baseball', 'Basketball', 'Bhagat', 'Biography', 'Brief', 'Business', \r\n    'Camus', 'Cervantes', 'Christie', 'Classics', 'Comics', 'Cook', 'Cricket', 'Cycling', \r\n    'Desai', 'Design', 'Development', 'Digital Marketing', 'Drama', 'Drawing', 'Dumas', \r\n    'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 'Football', 'Future', \r\n    'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', \r\n    'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', \r\n    'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', \r\n    'React', 'Redux', 'River', 'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming',\r\n     'Tale', 'Thrun', 'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS'\r\n]\r\n\r\nclass SearchTerms extends Component{\r\n    state = {\r\n        showSearchTerms: -1,\r\n        searchTerms:[],\r\n        activeTermIndex: 0,\r\n        toggleButtonText: \"Show suggested search terms\",\r\n        toggleButtonStyle: {color: \"white\", backgroundColor: \"#ca9b34\"}\r\n    }\r\n\r\n    toggleSearchTerms = () =>{\r\n        this.state.showSearchTerms *= (-1);\r\n        console.log(this.state.showSearchTerms);\r\n        this.state.showSearchTerms == 1? \r\n            this.setState({\r\n                searchTerms:allSearchTerms,\r\n                toggleButtonText: \"Hide suggested search terms\", \r\n                toggleButtonStyle: {color: \"#ca9b34\", backgroundColor: \"#f5f3f3\"}\r\n            })\r\n            :this.setState({\r\n                searchTerms:[],\r\n                toggleButtonText: \"Show suggested search terms\", \r\n                toggleButtonStyle: {color: \"white\", backgroundColor: \"#ca9b34\"}\r\n            });\r\n    }\r\n        \r\n    \r\n    render(){\r\n        const{showSearchTerms, searchTerms, activeTermIndex, toggleButtonText, toggleButtonStyle} = this.state;\r\n        return (\r\n            <div className = \"search-terms-collection\">\r\n                <button className= \"search-terms-toggle\" onClick={this.toggleSearchTerms} style={toggleButtonStyle}>\r\n                    {toggleButtonText}\r\n                </button>\r\n\r\n                <li className = \"search-terms-list\">\r\n                    {searchTerms.map(term=>{\r\n                        return(\r\n                            <ol className = \"search-term\" >{term}</ol>\r\n                        )\r\n                    })}\r\n                </li>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default SearchTerms;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport background from './pictures/background.jpeg';\r\nimport Book from './Book';\r\nimport SearchTerms from './SearchTerms';\r\nimport * as BooksAPI from './BooksAPI';\r\n\r\nclass Search extends Component { \r\n    state = {\r\n        query: '',\r\n        searchResult:[]\r\n      }\r\n\r\n    updateQuery = (query) => {\r\n        this.setState(() => ({\r\n          query: query.trim()\r\n        }))\r\n    }\r\n\r\n    search = (query) =>{\r\n        if(query!=''){\r\n            BooksAPI.search(query).then(books=>{\r\n                if(books.error){\r\n                    this.setState({ searchResult: [] })\r\n                }else{\r\n                this.setState({ searchResult: books })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        BooksAPI.getAll().then((books) => {\r\n            this.setState({searchResult: books })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { allBooks, onMoveBook } = this.props;\r\n        const { query, searchResult} = this.state;\r\n\r\n\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link to=\"/\" className=\"close-search\">Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input type=\"text\" \r\n                            placeholder=\"Search by title or author\" \r\n                            value={this.state.query}\r\n                            onChange={(event) => {\r\n                                this.updateQuery(event.target.value);\r\n                                this.search(query);\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <SearchTerms/>\r\n                \r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {searchResult.map(book => (\r\n                            <Book\r\n                                key={book.id}\r\n                                book={book}\r\n                                onMoveBook = {onMoveBook}\r\n                            />\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport {HashRouter, Route, Link } from 'react-router-dom';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport BookShelf from './BookShelf';\r\nimport Header from './Header';\r\nimport Search from './Search';\r\nimport './App.css'\r\n\r\nclass BooksApp extends Component {\r\n    state = {\r\n        books: [],\r\n        searchResult : []\r\n    }\r\n\r\n    moveBook = (book, shelf) => {\r\n        if (this.state.books) {\r\n            BooksAPI.update(book, shelf).then(() => {\r\n                book.shelf = shelf;\r\n                this.setState(state => ({\r\n                    books: state.books.filter(b => b.id !== book.id).concat([book])\r\n                }))\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        BooksAPI.getAll().then((books) => {\r\n            this.setState({ books: books, searchResult: books })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { books, searchResult } = this.state;\r\n\r\n        return (\r\n            <HashRouter basename={process.env.PUBLIC_URL}>\r\n            <div className=\"app\">\r\n                <Route exact path='/search' render={() => (\r\n                    <Search \r\n                        allBooks = {searchResult}\r\n                        onMoveBook={this.moveBook}/>\r\n                )} />\r\n                <Route exact path='/' render={() => (\r\n                    <div >\r\n                        <Header/>\r\n                        <div>\r\n                            <BookShelf\r\n                                booksOnShelf={books}\r\n                                onMoveBook={this.moveBook}\r\n                            />\r\n                        </div>\r\n                        <Link to=\"/search\" className=\"open-search\">ADD BOOKS</Link>\r\n                    </div>\r\n                )} />\r\n            </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}